on:
  release:
    types: [published]

name: Publish binaries and Docker images to release

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: mitsuba
            asset_name: mitsuba-linux-amd64
          - os: macos-latest
            artifact_name: mitsuba
            asset_name: mitsuba-macos-amd64
          - os: windows-latest
            artifact_name: mitsuba.exe
            asset_name: mitsuba-windows-amd64.exe

    steps:
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: stable
    - uses: actions/checkout@v1
    - name: Build
      run: cargo build --release --locked
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.PUBLISH_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{ github.ref }}

  publish_docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag ${{ env.IMAGE_NAME }}

      - name: Log into GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Log into Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push image to GitHub Packages
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Get version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:latest

      - name: Push image to Docker Hub
        run: |
          DOCKERHUB_IMAGE_ID=${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          DOCKERHUB_IMAGE_ID=$(echo $DOCKERHUB_IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Get version from tag
          VERSION=${GITHUB_REF#refs/tags/}
          echo DOCKERHUB_IMAGE_ID=$DOCKERHUB_IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $DOCKERHUB_IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $DOCKERHUB_IMAGE_ID:latest
          docker push $DOCKERHUB_IMAGE_ID:$VERSION
          docker push $DOCKERHUB_IMAGE_ID:latest
